// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230429200445_Nullable_Outlet_Name")]
    partial class Nullable_Outlet_Name
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.ActionRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ComparisonType")
                        .HasColumnType("integer");

                    b.Property<string>("ComparisonValue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MeasureProperty")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OutletAction")
                        .HasColumnType("integer");

                    b.Property<int>("OutletConfigurationId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("OutletConfigurationId");

                    b.ToTable("ActionRules");
                });

            modelBuilder.Entity("Domain.Entities.EnvironmentMeasure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("GroundHumidity")
                        .HasColumnType("double precision");

                    b.Property<double>("Humidity")
                        .HasColumnType("double precision");

                    b.Property<double>("Pressure")
                        .HasColumnType("double precision");

                    b.Property<double>("Temperature")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Measures");
                });

            modelBuilder.Entity("Domain.Entities.OutletConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("OutletId")
                        .HasColumnType("integer");

                    b.Property<int>("PinId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("OutletId")
                        .IsUnique();

                    b.ToTable("OutletConfigurations");
                });

            modelBuilder.Entity("Domain.Entities.TakenAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ActionRuleId")
                        .HasColumnType("integer");

                    b.Property<int>("EnvironmentMeasureId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("ActionRuleId");

                    b.HasIndex("EnvironmentMeasureId");

                    b.ToTable("TakenActions");
                });

            modelBuilder.Entity("Domain.Entities.ActionRule", b =>
                {
                    b.HasOne("Domain.Entities.OutletConfiguration", "Outlet")
                        .WithMany()
                        .HasForeignKey("OutletConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Outlet");
                });

            modelBuilder.Entity("Domain.Entities.TakenAction", b =>
                {
                    b.HasOne("Domain.Entities.ActionRule", "ActionRule")
                        .WithMany()
                        .HasForeignKey("ActionRuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.EnvironmentMeasure", "EnvironmentMeasure")
                        .WithMany()
                        .HasForeignKey("EnvironmentMeasureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActionRule");

                    b.Navigation("EnvironmentMeasure");
                });
#pragma warning restore 612, 618
        }
    }
}
